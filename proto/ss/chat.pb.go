// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.12.3
// source: chat.proto

package ss

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CHAT_MSG_TYPE int32

const (
	CHAT_MSG_TYPE_CHAT_TYPE_TEXT CHAT_MSG_TYPE = 0 //text
	CHAT_MSG_TYPE_CHAT_TYPE_IMG  CHAT_MSG_TYPE = 1 //msg
	CHAT_MSG_TYPE_CHAT_TYPE_MP4  CHAT_MSG_TYPE = 2 //mp4
)

// Enum value maps for CHAT_MSG_TYPE.
var (
	CHAT_MSG_TYPE_name = map[int32]string{
		0: "CHAT_TYPE_TEXT",
		1: "CHAT_TYPE_IMG",
		2: "CHAT_TYPE_MP4",
	}
	CHAT_MSG_TYPE_value = map[string]int32{
		"CHAT_TYPE_TEXT": 0,
		"CHAT_TYPE_IMG":  1,
		"CHAT_TYPE_MP4":  2,
	}
)

func (x CHAT_MSG_TYPE) Enum() *CHAT_MSG_TYPE {
	p := new(CHAT_MSG_TYPE)
	*p = x
	return p
}

func (x CHAT_MSG_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CHAT_MSG_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[0].Descriptor()
}

func (CHAT_MSG_TYPE) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[0]
}

func (x CHAT_MSG_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CHAT_MSG_TYPE.Descriptor instead.
func (CHAT_MSG_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

type CHAT_MSG_FLAG int32

const (
	CHAT_MSG_FLAG_CHAT_FLAG_NORMAL    CHAT_MSG_FLAG = 0 //normal chat
	CHAT_MSG_FLAG_CHAT_FLAG_DEL       CHAT_MSG_FLAG = 1 //deleted
	CHAT_MSG_FLAG_CHAT_FLAG_CANCELED  CHAT_MSG_FLAG = 2 //canceled chat
	CHAT_MSG_FLAG_CHAT_FLAG_CANCELLER CHAT_MSG_FLAG = 3 //cancel master chat
)

// Enum value maps for CHAT_MSG_FLAG.
var (
	CHAT_MSG_FLAG_name = map[int32]string{
		0: "CHAT_FLAG_NORMAL",
		1: "CHAT_FLAG_DEL",
		2: "CHAT_FLAG_CANCELED",
		3: "CHAT_FLAG_CANCELLER",
	}
	CHAT_MSG_FLAG_value = map[string]int32{
		"CHAT_FLAG_NORMAL":    0,
		"CHAT_FLAG_DEL":       1,
		"CHAT_FLAG_CANCELED":  2,
		"CHAT_FLAG_CANCELLER": 3,
	}
)

func (x CHAT_MSG_FLAG) Enum() *CHAT_MSG_FLAG {
	p := new(CHAT_MSG_FLAG)
	*p = x
	return p
}

func (x CHAT_MSG_FLAG) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CHAT_MSG_FLAG) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[1].Descriptor()
}

func (CHAT_MSG_FLAG) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[1]
}

func (x CHAT_MSG_FLAG) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CHAT_MSG_FLAG.Descriptor instead.
func (CHAT_MSG_FLAG) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

type ChatMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatType  CHAT_MSG_TYPE `protobuf:"varint,1,opt,name=chat_type,json=chatType,proto3,enum=ss.CHAT_MSG_TYPE" json:"chat_type,omitempty"` //chat type
	MsgId     int64         `protobuf:"varint,2,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`                                //msg id(filled by group svr)
	GroupId   int64         `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`                          //chat group id
	SenderUid int64         `protobuf:"varint,4,opt,name=sender_uid,json=senderUid,proto3" json:"sender_uid,omitempty"`                    //sender uid
	Sender    string        `protobuf:"bytes,5,opt,name=sender,proto3" json:"sender,omitempty"`
	SendTs    int64         `protobuf:"varint,6,opt,name=send_ts,json=sendTs,proto3" json:"send_ts,omitempty"`
	Content   string        `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`                                           //chat content
	ChatFlag  CHAT_MSG_FLAG `protobuf:"varint,20,opt,name=chat_flag,json=chatFlag,proto3,enum=ss.CHAT_MSG_FLAG" json:"chat_flag,omitempty"` //flag
}

func (x *ChatMsg) Reset() {
	*x = ChatMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMsg) ProtoMessage() {}

func (x *ChatMsg) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMsg.ProtoReflect.Descriptor instead.
func (*ChatMsg) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMsg) GetChatType() CHAT_MSG_TYPE {
	if x != nil {
		return x.ChatType
	}
	return CHAT_MSG_TYPE_CHAT_TYPE_TEXT
}

func (x *ChatMsg) GetMsgId() int64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *ChatMsg) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ChatMsg) GetSenderUid() int64 {
	if x != nil {
		return x.SenderUid
	}
	return 0
}

func (x *ChatMsg) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *ChatMsg) GetSendTs() int64 {
	if x != nil {
		return x.SendTs
	}
	return 0
}

func (x *ChatMsg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMsg) GetChatFlag() CHAT_MSG_FLAG {
	if x != nil {
		return x.ChatFlag
	}
	return CHAT_MSG_FLAG_CHAT_FLAG_NORMAL
}

type UserChatGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId    int64  `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupName  string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	LastReadId int64  `protobuf:"varint,3,opt,name=last_read_id,json=lastReadId,proto3" json:"last_read_id,omitempty"` //latest msg id
	EnterTs    int64  `protobuf:"varint,4,opt,name=enter_ts,json=enterTs,proto3" json:"enter_ts,omitempty"`            //enter group time
}

func (x *UserChatGroup) Reset() {
	*x = UserChatGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChatGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChatGroup) ProtoMessage() {}

func (x *UserChatGroup) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChatGroup.ProtoReflect.Descriptor instead.
func (*UserChatGroup) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

func (x *UserChatGroup) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *UserChatGroup) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *UserChatGroup) GetLastReadId() int64 {
	if x != nil {
		return x.LastReadId
	}
	return 0
}

func (x *UserChatGroup) GetEnterTs() int64 {
	if x != nil {
		return x.EnterTs
	}
	return 0
}

type UserChatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllGroup      int32                    `protobuf:"varint,20,opt,name=all_group,json=allGroup,proto3" json:"all_group,omitempty"`
	AllGroups     map[int64]*UserChatGroup `protobuf:"bytes,21,rep,name=all_groups,json=allGroups,proto3" json:"all_groups,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MasterGroup   int32                    `protobuf:"varint,22,opt,name=master_group,json=masterGroup,proto3" json:"master_group,omitempty"`
	MasterGroups  map[int64]bool           `protobuf:"bytes,23,rep,name=master_groups,json=masterGroups,proto3" json:"master_groups,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	EnteringGroup map[int64]bool           `protobuf:"bytes,24,rep,name=entering_group,json=enteringGroup,proto3" json:"entering_group,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //entering group process
}

func (x *UserChatInfo) Reset() {
	*x = UserChatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChatInfo) ProtoMessage() {}

func (x *UserChatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChatInfo.ProtoReflect.Descriptor instead.
func (*UserChatInfo) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{2}
}

func (x *UserChatInfo) GetAllGroup() int32 {
	if x != nil {
		return x.AllGroup
	}
	return 0
}

func (x *UserChatInfo) GetAllGroups() map[int64]*UserChatGroup {
	if x != nil {
		return x.AllGroups
	}
	return nil
}

func (x *UserChatInfo) GetMasterGroup() int32 {
	if x != nil {
		return x.MasterGroup
	}
	return 0
}

func (x *UserChatInfo) GetMasterGroups() map[int64]bool {
	if x != nil {
		return x.MasterGroups
	}
	return nil
}

func (x *UserChatInfo) GetEnteringGroup() map[int64]bool {
	if x != nil {
		return x.EnteringGroup
	}
	return nil
}

type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     int64           `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupName   string          `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	MasterUid   int64           `protobuf:"varint,3,opt,name=master_uid,json=masterUid,proto3" json:"master_uid,omitempty"`
	LatestMsgId int64           `protobuf:"varint,4,opt,name=latest_msg_id,json=latestMsgId,proto3" json:"latest_msg_id,omitempty"` //latest chat msg id
	CreatedTs   int64           `protobuf:"varint,5,opt,name=created_ts,json=createdTs,proto3" json:"created_ts,omitempty"`
	MemCount    int32           `protobuf:"varint,6,opt,name=mem_count,json=memCount,proto3" json:"mem_count,omitempty"`
	Members     map[int64]int32 `protobuf:"bytes,20,rep,name=members,proto3" json:"members,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	BlobInfo    *GroupBlobData  `protobuf:"bytes,21,opt,name=blob_info,json=blobInfo,proto3" json:"blob_info,omitempty"`
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{3}
}

func (x *GroupInfo) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GroupInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GroupInfo) GetMasterUid() int64 {
	if x != nil {
		return x.MasterUid
	}
	return 0
}

func (x *GroupInfo) GetLatestMsgId() int64 {
	if x != nil {
		return x.LatestMsgId
	}
	return 0
}

func (x *GroupInfo) GetCreatedTs() int64 {
	if x != nil {
		return x.CreatedTs
	}
	return 0
}

func (x *GroupInfo) GetMemCount() int32 {
	if x != nil {
		return x.MemCount
	}
	return 0
}

func (x *GroupInfo) GetMembers() map[int64]int32 {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *GroupInfo) GetBlobInfo() *GroupBlobData {
	if x != nil {
		return x.BlobInfo
	}
	return nil
}

type GroupBlobData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visible      int32  `protobuf:"varint,1,opt,name=visible,proto3" json:"visible,omitempty"` //default 0: group is invisible
	VisibleScore int32  `protobuf:"varint,2,opt,name=visible_score,json=visibleScore,proto3" json:"visible_score,omitempty"`
	GroupDesc    string `protobuf:"bytes,20,opt,name=group_desc,json=groupDesc,proto3" json:"group_desc,omitempty"`
	HeadUrl      string `protobuf:"bytes,21,opt,name=head_url,json=headUrl,proto3" json:"head_url,omitempty"`
}

func (x *GroupBlobData) Reset() {
	*x = GroupBlobData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupBlobData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupBlobData) ProtoMessage() {}

func (x *GroupBlobData) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupBlobData.ProtoReflect.Descriptor instead.
func (*GroupBlobData) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{4}
}

func (x *GroupBlobData) GetVisible() int32 {
	if x != nil {
		return x.Visible
	}
	return 0
}

func (x *GroupBlobData) GetVisibleScore() int32 {
	if x != nil {
		return x.VisibleScore
	}
	return 0
}

func (x *GroupBlobData) GetGroupDesc() string {
	if x != nil {
		return x.GroupDesc
	}
	return ""
}

func (x *GroupBlobData) GetHeadUrl() string {
	if x != nil {
		return x.HeadUrl
	}
	return ""
}

type GroupGroudItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrpId    int64  `protobuf:"varint,1,opt,name=grp_id,json=grpId,proto3" json:"grp_id,omitempty"`
	GrpName  string `protobuf:"bytes,2,opt,name=grp_name,json=grpName,proto3" json:"grp_name,omitempty"`
	MemCount int32  `protobuf:"varint,3,opt,name=mem_count,json=memCount,proto3" json:"mem_count,omitempty"`
	Desc     string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	HeadUrl  string `protobuf:"bytes,5,opt,name=head_url,json=headUrl,proto3" json:"head_url,omitempty"`
}

func (x *GroupGroudItem) Reset() {
	*x = GroupGroudItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupGroudItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupGroudItem) ProtoMessage() {}

func (x *GroupGroudItem) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupGroudItem.ProtoReflect.Descriptor instead.
func (*GroupGroudItem) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{5}
}

func (x *GroupGroudItem) GetGrpId() int64 {
	if x != nil {
		return x.GrpId
	}
	return 0
}

func (x *GroupGroudItem) GetGrpName() string {
	if x != nil {
		return x.GrpName
	}
	return ""
}

func (x *GroupGroudItem) GetMemCount() int32 {
	if x != nil {
		return x.MemCount
	}
	return 0
}

func (x *GroupGroudItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GroupGroudItem) GetHeadUrl() string {
	if x != nil {
		return x.HeadUrl
	}
	return ""
}

var File_chat_proto protoreflect.FileDescriptor

var file_chat_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x73, 0x73,
	0x22, 0x85, 0x02, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x73, 0x73, 0x2e, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x73,
	0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x73,
	0x2e, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x52, 0x08,
	0x63, 0x68, 0x61, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x22, 0x86, 0x01, 0x0a, 0x0d, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x54,
	0x73, 0x22, 0xf7, 0x03, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x3e, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x15, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x47, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x73, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x4a, 0x0a, 0x0e, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x18, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x4f, 0x0a, 0x0e, 0x41, 0x6c, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe6, 0x02, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x55,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x14, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x62,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x73,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x6c, 0x6f, 0x62, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x62, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x3a, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x88, 0x01, 0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x6c,
	0x6f, 0x62, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x22,
	0x8e, 0x01, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x72, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x67, 0x72, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x55, 0x72, 0x6c,
	0x2a, 0x49, 0x0a, 0x0d, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54,
	0x45, 0x58, 0x54, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4d, 0x47, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x48, 0x41, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x50, 0x34, 0x10, 0x02, 0x2a, 0x69, 0x0a, 0x0d, 0x43,
	0x48, 0x41, 0x54, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x12, 0x14, 0x0a, 0x10,
	0x43, 0x48, 0x41, 0x54, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f,
	0x44, 0x45, 0x4c, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x46, 0x4c,
	0x41, 0x47, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x17, 0x0a,
	0x13, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45,
	0x4c, 0x4c, 0x45, 0x52, 0x10, 0x03, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_proto_rawDescOnce sync.Once
	file_chat_proto_rawDescData = file_chat_proto_rawDesc
)

func file_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_proto_rawDescData)
	})
	return file_chat_proto_rawDescData
}

var file_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_chat_proto_goTypes = []interface{}{
	(CHAT_MSG_TYPE)(0),     // 0: ss.CHAT_MSG_TYPE
	(CHAT_MSG_FLAG)(0),     // 1: ss.CHAT_MSG_FLAG
	(*ChatMsg)(nil),        // 2: ss.ChatMsg
	(*UserChatGroup)(nil),  // 3: ss.UserChatGroup
	(*UserChatInfo)(nil),   // 4: ss.UserChatInfo
	(*GroupInfo)(nil),      // 5: ss.GroupInfo
	(*GroupBlobData)(nil),  // 6: ss.GroupBlobData
	(*GroupGroudItem)(nil), // 7: ss.GroupGroudItem
	nil,                    // 8: ss.UserChatInfo.AllGroupsEntry
	nil,                    // 9: ss.UserChatInfo.MasterGroupsEntry
	nil,                    // 10: ss.UserChatInfo.EnteringGroupEntry
	nil,                    // 11: ss.GroupInfo.MembersEntry
}
var file_chat_proto_depIdxs = []int32{
	0,  // 0: ss.ChatMsg.chat_type:type_name -> ss.CHAT_MSG_TYPE
	1,  // 1: ss.ChatMsg.chat_flag:type_name -> ss.CHAT_MSG_FLAG
	8,  // 2: ss.UserChatInfo.all_groups:type_name -> ss.UserChatInfo.AllGroupsEntry
	9,  // 3: ss.UserChatInfo.master_groups:type_name -> ss.UserChatInfo.MasterGroupsEntry
	10, // 4: ss.UserChatInfo.entering_group:type_name -> ss.UserChatInfo.EnteringGroupEntry
	11, // 5: ss.GroupInfo.members:type_name -> ss.GroupInfo.MembersEntry
	6,  // 6: ss.GroupInfo.blob_info:type_name -> ss.GroupBlobData
	3,  // 7: ss.UserChatInfo.AllGroupsEntry.value:type_name -> ss.UserChatGroup
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_chat_proto_init() }
func file_chat_proto_init() {
	if File_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChatGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupBlobData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupGroudItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_depIdxs,
		EnumInfos:         file_chat_proto_enumTypes,
		MessageInfos:      file_chat_proto_msgTypes,
	}.Build()
	File_chat_proto = out.File
	file_chat_proto_rawDesc = nil
	file_chat_proto_goTypes = nil
	file_chat_proto_depIdxs = nil
}
